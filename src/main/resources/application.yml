# 配置项目名和session过期时间
server:
  servlet:
    context-path: /baoda-cloud
    session:
      timeout: 60m
    encoding:
      force: true
  ssl:
    enabled: false

#logging:
#  file:
#    name: log/baoda-cloud.log

# mybatis配置
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml

minio:
  endpoint: http://127.0.0.1:9000
  accessKey: minioadmin
  secretKey: minioadmin

# 配置邮件服务
spring:
  mail:
    username: yzecho@foxmail.com
    password: vxndfqlchxghgecb
    host: smtp.qq.com
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
  # 静态资源的访问路径
  mvc:
    static-path-pattern: /**
  # 配置ThymeLeaf模板缓存（后期前后端分离）
  thymeleaf:
    enabled: true
    encoding: UTF-8
    prefix: classpath:/templates/
    suffix: .html
    servlet:
      content-type: text/html
  # 配置数据源
  datasource:
    username: root
    password: liuzhe11
    url: jdbc:mysql://127.0.0.1:3306/cloud?serverTimezone=Hongkong&useAffectedRows=true&characterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdle执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
      #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
      #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
      filters: stat,wall,1og4j
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  # 配置文件上传开关
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB

oauth:
  github:
    client-id: 51019c989a28a1a8517e
    client-secret: ebbcf7ac3f1c6333ce4671193d4934c47951e1d2
    redirect-uri: http://localhost:8080/baoda-cloud/loginByGitHub